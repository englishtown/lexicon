#!/usr/bin/env node

var fs = require('fs'),
	path = require('path'),
	program = require('commander'),
	glob = require('glob-whatev'),
	lexicon = require('../lib/lexicon').lexicon,
	mkdirp = require('mkdirp'),
	rimraf = require('rimraf'),
	formatExts = {markdown: '.md', json: '.json', html: '.html'},
	pkg = require('../package.json');

program
	.version(pkg.version)
	.usage("[files] [options]")
	.option('-i, --inputdir [dir]', 'source code directory')
	.option('-o, --outputdir [dir]', 'directory to put generated files')
	.option('-f, --format [json]', 'output format [html markdown json]', 'json')
	.parse(process.argv);

if (!/html|markdown|json/.test(program.format)) {
	console.log("\nInvalid output format.");
	program.help();
}

if (program.args.length > 0) {
	console.log(lexicon(program.args, program.format));
} else {
	if (!(program.inputdir || program.file)) {
		program.help();
	}

	var files = glob.glob(program.inputdir + "/**/*.js");

	if (program.outputdir) {
		var re = new RegExp("^" + program.inputdir);

		rimraf.sync(program.outputdir);
		files.forEach(function(f) {
			var fname = f.replace(re, program.outputdir) + formatExts[program.format];
			mkdirp.sync(path.dirname(fname));
			fs.writeFileSync(fname, lexicon(f, program.format));
		});
	} else {
		console.log(lexicon(files, program.format));
	}
}